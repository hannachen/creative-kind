{"version":3,"sources":["main.js","quilt.js","utils.js"],"names":["$","window","mobileMq","QuiltingBee","init","this","initVariables","initEvents","initPage","$drawerNav","on","onDrawerOpen","onDrawerClose","taburl","document","location","toString","match","split","tab","e","$body","$target","target","$overlay","find","length","trigger","appendTo","remove","jQuery","Quilt","svg","quiltData","$patchPreview","myPatch","patches","clickedPatch","patchStatus","setupQuilt","console","log","prototype","disable","_this","_","forEach","patch","off","getPatchEvents","status","uid","hasChildren","svgPatches","children","indexOffset","group","i","undefined","plus","circle","item","itemType","getItemType","locked","visible","strokeScaling","fillColor","data","project","importSVG","patchSvg","rotate","fitBounds","bounds","addChild","push","className","type","toLowerCase","events","click","showPatch","Modernizr","touch","mouseenter","enterArea","mouseleave","leaveArea","patchId","css","$preview","empty","append","opacity","_typeof","Symbol","iterator","obj","constructor","utils","serializeArray","form","field","l","s","nodeName","len","elements","name","disabled","options","j","selected","value","checked","dataSet","seralizeObject","arraySet","breakpoint","mediaMq","matchMedia","matches","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict';\n\n(function ($, window) {\n\n  window.mobileMq = 'screen and (min-width: 48em)';\n\n  var QuiltingBee = {\n    init: function init() {\n      this.initVariables();\n      this.initEvents();\n      this.initPage();\n    },\n    initVariables: function initVariables() {\n      this.$drawerNav = $('#account-drawer, #submenu-drawer');\n    },\n    initEvents: function initEvents() {\n      this.$drawerNav.on('show.bs.drawer', this.onDrawerOpen);\n      this.$drawerNav.on('hidden.bs.drawer', this.onDrawerClose);\n    },\n    initPage: function initPage() {\n      // Allow Page URL to activate a tab's ID\n      var taburl = document.location.toString();\n      if (taburl.match('#')) {\n        $('.nav-pills a[href=\"#' + taburl.split('#')[1] + '\"]').tab('show');\n      }\n    },\n    onDrawerOpen: function onDrawerOpen(e) {\n      var $body = $('body'),\n          $target = $(e.target),\n          $overlay = $body.find('.overlay');\n      if (!$overlay.length) {\n        $overlay = $('<div class=\"overlay\"></div>');\n        $overlay.on('click', function () {\n          $target.find('.drawer-toggle').trigger('click');\n        });\n        $overlay.appendTo($body);\n      }\n    },\n    onDrawerClose: function onDrawerClose() {\n      $('.overlay').remove();\n    }\n  };\n\n  $(function () {\n    QuiltingBee.init();\n  });\n})(jQuery, window);","'use strict';\n\nvar Quilt = function (svg, quiltData) {\n\n  console.log('NEW');\n\n  function Quilt(svg, quiltData) {\n    this.$patchPreview = $('#patch-preview');\n    this.myPatch = '';\n    this.patches = [];\n    this.clickedPatch;\n    this.patchStatus;\n\n    this.setupQuilt(svg, quiltData);\n  }\n\n  Quilt.prototype.disable = function () {\n    var _this = this;\n    _.forEach(this.patches, function (patch) {\n      patch.off(_this.getPatchEvents());\n    });\n  };\n\n  Quilt.prototype.setupQuilt = function (svg, patchStatus) {\n    var _this = this;\n    _.forEach(patchStatus, function (patch) {\n      if (patch.status === 'mine') {\n        _this.myPatch = patch.uid;\n      }\n    });\n    if (svg.hasChildren()) {\n      (function () {\n        var svgPatches = svg.children,\n            indexOffset = 0;\n        console.log('LENGTH', svgPatches.length);\n        _.forEach(svgPatches, function (group, i) {\n          if (group === undefined || group.hasChildren() === undefined || !patchStatus[i - indexOffset]) {\n            indexOffset++;\n            console.log(\"SKIP\", group);\n            return;\n          }\n          var patch = void 0,\n              plus = void 0,\n              circle = void 0;\n          if (group.hasChildren()) {\n            _.forEach(group.children, function (item) {\n              var itemType = _this.getItemType(item);\n              switch (itemType) {\n                case 'rectangle':\n                  patch = item;\n                  break;\n                case 'path':\n                  plus = item;\n                  break;\n                case 'circle':\n                  circle = item;\n                  break;\n              }\n            });\n          }\n\n          plus.locked = true;\n          plus.visible = false;\n\n          circle.locked = true;\n          circle.visible = false;\n\n          patch.strokeScaling = false;\n          patch.fillColor = '#ffffff';\n          patch.data.uid = patchStatus[i - indexOffset].uid;\n          patch.data.status = patchStatus[i - indexOffset].status;\n\n          switch (patch.data.status) {\n            case 'progress':\n              patch.fillColor = '#cccccc';\n              break;\n            case 'mine':\n              patch.on(_this.getPatchEvents());\n              patch.fillColor = '#aab0ff';\n              break;\n            case 'complete':\n              project.importSVG('/patch/svg/' + patch.data.uid, function (patchSvg) {\n                patchSvg.rotate(-45);\n                patchSvg.fitBounds(patch.bounds);\n                patchSvg.data = patch.data;\n                group.addChild(patchSvg);\n                patchSvg.on(_this.getPatchEvents());\n                patch.visible = false;\n              });\n              break;\n            case 'new':\n            default:\n              if (_this.myPatch.length) {\n                plus.visible = false;\n              } else {\n                patch.on(_this.getPatchEvents());\n                plus.visible = true;\n              }\n              break;\n          }\n          _this.patches.push(patch);\n        });\n      })();\n    }\n  };\n\n  /**\n   * Find out the type of a paper item.\n   *\n   * @param {paper.Item} item\n   * @returns {string}\n   */\n  Quilt.prototype.getItemType = function (item) {\n    var itemType = '';\n    switch (item.className) {\n      case 'Shape':\n        itemType = item.type;\n        break;\n      case 'Path':\n        itemType = item.className.toLowerCase();\n        break;\n      default:\n    }\n    return itemType;\n  };\n\n  Quilt.prototype.getPatchEvents = function () {\n    var _this = this,\n        events = {};\n    events.click = function (e) {\n      var clickedPatch = e.target.data;\n      _this.clickedPatch = clickedPatch;\n      if (clickedPatch.status === 'complete') {\n        _this.showPatch(clickedPatch.uid);\n      } else {\n        // trigger custom event\n        $(document).trigger({\n          type: 'click-patch',\n          patch: clickedPatch\n        });\n      }\n    };\n    if (!Modernizr.touch) {\n      events.mouseenter = _this.enterArea;\n      events.mouseleave = _this.leaveArea;\n    }\n    return events;\n  };\n\n  Quilt.prototype.showPatch = function (patchId) {\n    var _this = this;\n    console.log(patchId);\n    this.$patchPreview.css('display', 'block');\n    var $preview = $('<img src=\"/patch/svg/' + patchId + '\">');\n    $preview.on('click', function () {\n      $preview.off('click');\n      _this.$patchPreview.css('display', 'none');\n      _this.$patchPreview.empty();\n    });\n    this.$patchPreview.append($preview);\n  };\n\n  Quilt.prototype.enterArea = function (e) {\n    e.target.opacity = 0.8;\n  };\n\n  Quilt.prototype.leaveArea = function (e) {\n    e.target.opacity = 1;\n  };\n\n  return Quilt;\n}();","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar utils = function ($, window) {\n  return {\n    /**\n     * Serialize a form to an array.\n     *\n     * @param {object} form\n     * @returns {Array} Serialized array of the form data\n     */\n    serializeArray: function serializeArray(form) {\n      var field,\n          l,\n          s = [];\n      if ((typeof form === 'undefined' ? 'undefined' : _typeof(form)) == 'object' && form.nodeName == \"FORM\") {\n        var len = form.elements.length;\n        for (var i = 0; i < len; i++) {\n          field = form.elements[i];\n          if (field.name && !field.disabled && field.type != 'file' && field.type != 'reset' && field.type != 'submit' && field.type != 'button') {\n            if (field.type == 'select-multiple') {\n              l = form.elements[i].options.length;\n              for (j = 0; j < l; j++) {\n                if (field.options[j].selected) s[s.length] = { name: field.name, value: field.options[j].value };\n              }\n            } else if (field.type != 'checkbox' && field.type != 'radio' || field.checked) {\n              var dataSet = {};\n              dataSet[field.name] = field.value;\n              s[s.length] = dataSet;\n            }\n          }\n        }\n      }\n      return s;\n    },\n\n    /**\n     * Serialize a form to an object. TODO: take a closer look at this\n     *\n     * @param {object} form\n     * @returns {object} Serialized object of the form data\n     */\n    seralizeObject: function seralizeObject(form) {\n      var field,\n          l,\n          s = {};\n      if ((typeof form === 'undefined' ? 'undefined' : _typeof(form)) == 'object' && form.nodeName == \"FORM\") {\n        var len = form.elements.length;\n        for (var i = 0; i < len; i++) {\n          field = form.elements[i];\n          if (field.name && !field.disabled && field.type != 'file' && field.type != 'reset' && field.type != 'submit' && field.type != 'button') {\n            if (field.type == 'select-multiple') {\n              l = form.elements[i].options.length;\n              var arraySet = [];\n              for (j = 0; j < l; j++) {\n                if (field.options[j].selected) var dataSet = { name: field.name, value: field.options[j].value };\n                arraySet.push(dataSet);\n              }\n              s[field.name] = arraySet;\n            } else if (field.type != 'checkbox' && field.type != 'radio' || field.checked) {\n              s[field.name] = field.value;\n            }\n          }\n        }\n      }\n      return s;\n    },\n\n    breakpoint: function breakpoint(mediaMq) {\n      return window.matchMedia(mediaMq).matches ? 'desktop' : 'mobile';\n    },\n\n    debounce: function debounce(func, wait, immediate) {\n      var timeout;\n      return function () {\n        var context = this,\n            args = arguments;\n        var later = function later() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    }\n\n  };\n}(jQuery, window);"],"sourceRoot":"/source/"}