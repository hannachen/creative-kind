{"version":3,"sources":["main.js","quilt.js","utils.js"],"names":["$","window","mobileMq","QuiltingBee","init","this","initVariables","initEvents","initPage","$flashMsg","$drawerNav","on","onDrawerOpen","onDrawerClose","taburl","document","location","toString","match","split","tab","console","log","_","isEmpty","find","text","trim","modal","e","$body","$target","target","$overlay","length","trigger","appendTo","remove","jQuery","Quilt","svg","quiltId","quiltData","$patchPreview","myPatch","patches","clickedPatch","patchStatus","setupQuilt","prototype","disable","_this","forEach","patch","off","getPatchEvents","status","uid","hasChildren","svgPatches","children","indexOffset","group","i","undefined","plus","circle","item","itemType","getItemType","locked","visible","strokeScaling","fillColor","data","project","importSVG","patchSvg","rotate","fitBounds","bounds","addChild","push","className","type","toLowerCase","events","click","quilt","showPatch","emitClickEvent","Modernizr","touch","mouseenter","enterArea","mouseleave","leaveArea","patchId","css","$preview","empty","append","opacity","dragging","_typeof","Symbol","iterator","obj","constructor","utils","serializeArray","form","field","l","s","nodeName","len","elements","name","disabled","options","j","selected","value","checked","dataSet","seralizeObject","arraySet","breakpoint","mediaMq","matchMedia","matches","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","validateEmail","email","re","test"],"mappings":"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","file":"../main.min.js","sourcesContent":["'use strict';\n\n(function ($, window) {\n\n  window.mobileMq = 'screen and (min-width: 48em)';\n\n  var QuiltingBee = {\n    init: function init() {\n      this.initVariables();\n      this.initEvents();\n      this.initPage();\n    },\n    initVariables: function initVariables() {\n      this.$flashMsg = $('#flash-modal');\n      this.$drawerNav = $('#account-drawer, #submenu-drawer');\n    },\n    initEvents: function initEvents() {\n      this.$drawerNav.on('show.bs.drawer', this.onDrawerOpen);\n      this.$drawerNav.on('hidden.bs.drawer', this.onDrawerClose);\n    },\n    initPage: function initPage() {\n      // Allow Page URL to activate a tab's ID\n      var taburl = document.location.toString();\n      if (taburl.match('#')) {\n        $('.nav-pills a[href=\"#' + taburl.split('#')[1] + '\"]').tab('show');\n      }\n      console.log('flash', _.isEmpty(this.$flashMsg.find('.modal-body').text().trim()));\n      if (!_.isEmpty(this.$flashMsg.find('.modal-body').text().trim())) {\n        this.$flashMsg.modal('show');\n      }\n    },\n    onDrawerOpen: function onDrawerOpen(e) {\n      var $body = $('body'),\n          $target = $(e.target),\n          $overlay = $body.find('.overlay');\n      if (!$overlay.length) {\n        $overlay = $('<div class=\"overlay\"></div>');\n        $overlay.on('click', function () {\n          $target.find('.drawer-toggle').trigger('click');\n        });\n        $overlay.appendTo($body);\n      }\n    },\n    onDrawerClose: function onDrawerClose() {\n      $('.overlay').remove();\n    }\n  };\n\n  $(function () {\n    QuiltingBee.init();\n  });\n})(jQuery, window);","'use strict';\n\nvar Quilt = function Quilt(svg, quiltId, quiltData) {\n\n  console.log('NEW');\n\n  this.$patchPreview = $('#patch-preview');\n  this.quiltId = quiltId;\n  this.myPatch = '';\n  this.patches = [];\n  this.clickedPatch;\n  this.patchStatus;\n\n  this.setupQuilt(svg, quiltData);\n};\n\nQuilt.prototype = {\n\n  disable: function disable() {\n    var _this = this;\n    _.forEach(this.patches, function (patch) {\n      patch.off(_this.getPatchEvents());\n    });\n  },\n\n  setupQuilt: function setupQuilt(svg, patchStatus) {\n    var _this = this;\n    _.forEach(patchStatus, function (patch) {\n      if (patch.status === 'mine') {\n        _this.myPatch = patch.uid;\n      }\n    });\n    if (svg.hasChildren()) {\n      (function () {\n        var svgPatches = svg.children,\n            indexOffset = 0;\n        console.log('LENGTH', svgPatches.length);\n        _.forEach(svgPatches, function (group, i) {\n          if (group === undefined || group.hasChildren() === undefined || !patchStatus[i - indexOffset]) {\n            indexOffset++;\n            console.log(\"SKIP\", group);\n            return;\n          }\n          var patch = void 0,\n              plus = void 0,\n              circle = void 0;\n          if (group.hasChildren()) {\n            _.forEach(group.children, function (item) {\n              var itemType = _this.getItemType(item);\n              switch (itemType) {\n                case 'rectangle':\n                  patch = item;\n                  break;\n                case 'path':\n                  plus = item;\n                  break;\n                case 'circle':\n                  circle = item;\n                  break;\n              }\n            });\n          }\n\n          plus.locked = true;\n          plus.visible = false;\n\n          circle.locked = true;\n          circle.visible = false;\n\n          patch.strokeScaling = false;\n          patch.fillColor = '#ffffff';\n          patch.data.uid = patchStatus[i - indexOffset].uid;\n          patch.data.status = patchStatus[i - indexOffset].status;\n\n          switch (patch.data.status) {\n            case 'progress':\n              patch.fillColor = '#cccccc';\n              break;\n            case 'mine':\n              patch.on(_this.getPatchEvents());\n              patch.fillColor = '#aab0ff';\n              break;\n            case 'complete':\n              project.importSVG('/patch/svg/' + patch.data.uid, function (patchSvg) {\n                patchSvg.rotate(-45);\n                patchSvg.fitBounds(patch.bounds);\n                patchSvg.data = patch.data;\n                group.addChild(patchSvg);\n                patchSvg.on(_this.getPatchEvents());\n                patch.visible = false;\n              });\n              break;\n            case 'new':\n            default:\n              if (_this.myPatch.length) {\n                plus.visible = false;\n              } else {\n                patch.on(_this.getPatchEvents());\n                plus.visible = true;\n              }\n              break;\n          }\n          _this.patches.push(patch);\n        });\n      })();\n    }\n  },\n\n  /**\n   * Find out the type of a paper item.\n   *\n   * @param {paper.Item} item\n   * @returns {string}\n   */\n  getItemType: function getItemType(item) {\n    var itemType = '';\n    switch (item.className) {\n      case 'Shape':\n        itemType = item.type;\n        break;\n      case 'Path':\n        itemType = item.className.toLowerCase();\n        break;\n      default:\n    }\n    return itemType;\n  },\n\n  getPatchEvents: function getPatchEvents() {\n    var _this = this,\n        events = {};\n    events.click = function (e) {\n      var clickedPatch = e.target.data;\n      clickedPatch.quilt = _this.quiltId;\n      console.log(_this.quiltId);\n      _this.clickedPatch = clickedPatch;\n      if (clickedPatch.status === 'complete') {\n        _this.showPatch(clickedPatch.uid);\n      } else {\n        _this.emitClickEvent(clickedPatch);\n      }\n    };\n    if (!Modernizr.touch) {\n      events.mouseenter = _this.enterArea;\n      events.mouseleave = _this.leaveArea;\n    }\n    return events;\n  },\n\n  emitClickEvent: function emitClickEvent(patchId) {\n    // trigger custom event\n    $(document).trigger({\n      type: 'click-patch',\n      patch: patchId\n    });\n  },\n\n  showPatch: function showPatch(patchId) {\n    var _this = this;\n    this.$patchPreview.css('display', 'block');\n    var $preview = $('<img src=\"/patch/svg/' + patchId + '\">');\n    $preview.on('click', function () {\n      $preview.off('click');\n      _this.$patchPreview.css('display', 'none');\n      _this.$patchPreview.empty();\n    });\n    this.$patchPreview.append($preview);\n  },\n\n  enterArea: function enterArea(e) {\n    e.target.opacity = 0.75;\n  },\n\n  leaveArea: function leaveArea(e) {\n    e.target.opacity = 1;\n    this.dragging = false;\n  }\n};","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar utils = function ($, window) {\n  return {\n    /**\n     * Serialize a form to an array.\n     *\n     * @param {object} form\n     * @returns {Array} Serialized array of the form data\n     */\n    serializeArray: function serializeArray(form) {\n      var field,\n          l,\n          s = [];\n      if ((typeof form === 'undefined' ? 'undefined' : _typeof(form)) == 'object' && form.nodeName == \"FORM\") {\n        var len = form.elements.length;\n        for (var i = 0; i < len; i++) {\n          field = form.elements[i];\n          if (field.name && !field.disabled && field.type != 'file' && field.type != 'reset' && field.type != 'submit' && field.type != 'button') {\n            if (field.type == 'select-multiple') {\n              l = form.elements[i].options.length;\n              for (j = 0; j < l; j++) {\n                if (field.options[j].selected) s[s.length] = { name: field.name, value: field.options[j].value };\n              }\n            } else if (field.type != 'checkbox' && field.type != 'radio' || field.checked) {\n              var dataSet = {};\n              dataSet[field.name] = field.value;\n              s[s.length] = dataSet;\n            }\n          }\n        }\n      }\n      return s;\n    },\n\n    /**\n     * Serialize a form to an object. TODO: take a closer look at this\n     *\n     * @param {object} form\n     * @returns {object} Serialized object of the form data\n     */\n    seralizeObject: function seralizeObject(form) {\n      var field,\n          l,\n          s = {};\n      if ((typeof form === 'undefined' ? 'undefined' : _typeof(form)) == 'object' && form.nodeName == \"FORM\") {\n        var len = form.elements.length;\n        for (var i = 0; i < len; i++) {\n          field = form.elements[i];\n          if (field.name && !field.disabled && field.type != 'file' && field.type != 'reset' && field.type != 'submit' && field.type != 'button') {\n            if (field.type == 'select-multiple') {\n              l = form.elements[i].options.length;\n              var arraySet = [];\n              for (j = 0; j < l; j++) {\n                if (field.options[j].selected) var dataSet = { name: field.name, value: field.options[j].value };\n                arraySet.push(dataSet);\n              }\n              s[field.name] = arraySet;\n            } else if (field.type != 'checkbox' && field.type != 'radio' || field.checked) {\n              s[field.name] = field.value;\n            }\n          }\n        }\n      }\n      return s;\n    },\n\n    breakpoint: function breakpoint(mediaMq) {\n      return window.matchMedia(mediaMq).matches ? 'desktop' : 'mobile';\n    },\n\n    debounce: function debounce(func, wait, immediate) {\n      var timeout;\n      return function () {\n        var context = this,\n            args = arguments;\n        var later = function later() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    },\n\n    validateEmail: function validateEmail(email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n  };\n}(jQuery, window);"]}